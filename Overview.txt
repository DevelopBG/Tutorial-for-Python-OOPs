1. class and object 
2. class has data/attribute and function/method
    > code waltthrough
    > attributes get called autometically but methods are to be called intensionally.
3. Why is the python called object oriented program? --- everythin in python is defined as an object.
4. Advantages of OOPs concepts-
    > we can create our own datatype.
    > code reusability
    >debugging
    > easy to colab. 

5. Example of a class ( Chatbook)
    > function vs method
    > magic method or dunder method
    > "self"
    > we can create attribute outside of the class as well. 
    
    > encpasulation.
    > getter and setter.
    > static method.
    > inheritance
        >code Example
        > why inheritance is required? ( code reusability, parent has no access to child clss)
        > what gets inherited? ( constructor, non private attribute, non private method)
        > constructor overloading and method overloading
        > super keyword ( can be used only inside class, cannot access variables/attributes, used only child class)
        > typer of inheritanc - single|multilevel|Hierchical|Multiple(diamond problem)|hybrid